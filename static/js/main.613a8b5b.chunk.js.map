{"version":3,"sources":["images/icon-arrow.svg","components/Inputs.js","components/Info.js","images/icon-location.svg","components/Map.js","App.js","index.js"],"names":["Inputs","value","setValue","submitHandler","className","type","onChange","e","target","onKeyDown","keyCode","placeholder","autoFocus","onClick","src","arrow","alt","Info","head","text","text2","zone","Map","data","lat","lng","Number","location","leafletMarker","L","icon","iconUrl","markerIcon","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","useEffect","leafletMap","map","zoomControl","setView","accessToken","process","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","addTo","marker","remove","style","height","App","useState","setData","dataFetching","query","a","axios","get","then","res","catch","err","console","log","trim","test","ip","region","city","timezone","isp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,MAA0B,uC,OC+B1BA,EA5BA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAUlC,OACC,0BAASC,UAAU,SAAnB,UACC,uBACCA,UAAU,gBACVC,KAAK,OACLJ,MAAOA,EACPK,SAfmB,SAACC,GACtBL,EAASK,EAAEC,OAAOP,QAehBQ,UAZgB,SAACF,GACD,KAAdA,EAAEG,SAAgBP,KAYpBQ,YAAY,6BACZC,WAAS,IAEV,wBAAQR,UAAU,kBAAkBS,QAASV,EAA7C,SACC,qBAAKW,IAAKC,EAAOC,IAAI,gBCVVC,EAbF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAElC,OADAF,EAAOA,GAAc,GAEpB,sBAAKf,UAAU,OAAf,UACC,sBAAMA,UAAU,aAAhB,SAA8Bc,IAC9B,oBAAGd,UAAU,aAAb,UACEiB,GAAQF,EAAO,MAAQA,EAAOA,GAAc,IAC5CC,EAAQ,KAAOA,EAAQ,U,wBCTb,MAA0B,0CC4D1BE,EAvDH,SAAC,GAAc,IAAD,EAOK,IAPhBC,EAAW,EAAXA,KAKTC,EAAa,SAARC,EAAkB,UAExBF,GAAiB,UAATA,IACXC,EAAME,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAMI,gBAAP,aAAC,EAAgBH,KAC7BC,EAAMC,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAMI,gBAAP,aAAC,EAAgBF,OAG7BD,IAASA,GAAV,EAAsB,CAAC,SAAU,YAAjC,GAAeC,EAAf,MAEA,IAAMG,EAAgBC,IAAEC,KAAK,CAC5BC,QAASC,EACTC,UAAWD,EAEXE,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,WAAY,CAAC,KAAM,IACnBC,aAAc,CAAC,KAAM,IACrBC,YAAa,CAAC,EAAG,KA0BlB,OAvBAC,qBAAU,WACT,IAAIC,EAAaX,IAAEY,IAAI,QAAS,CAAEC,aAAa,IAASC,QAAQ,CAACnB,EAAKC,GAAM,IACtEmB,EAAcC,+FAgBpB,OAdAhB,IAAEiB,UAAF,6FACuFF,GACtF,CACCG,YACC,8JACDC,QAAS,GACTC,GAAI,qBACJC,SAAU,IACVC,YAAa,EACbP,YAAaA,IAEbQ,MAAMZ,GAERX,IAAEwB,OAAO,CAAC7B,EAAKC,GAAM,CAAEK,KAAMF,IAAiBwB,MAAMZ,GAC7C,WACNA,EAAWc,YAEV,CAAC9B,EAAKC,IAGR,qBAAKwB,GAAG,QAAQM,MAhDH,CACbC,OAAQ,SA+CsBpD,UAAU,WAAxC,8BCIaqD,G,MAnDH,WAAO,IAAD,MACjB,EAA0BC,mBAAS,IAAnC,mBAAOzD,EAAP,KAAcC,EAAd,KACA,EAAwBwD,mBAAS,IAAjC,mBAAOnC,EAAP,KAAaoC,EAAb,KAEMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDC,IACjBC,IADiB,8CAC0BnB,mCAD1B,YAC2DgB,EAD3D,YACoE5D,IACrFgE,MAAK,SAACC,GAAD,OAASA,EAAI3C,QAClB4C,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAJT,OACd7C,EADc,OAKpBoC,EAAQpC,GACRrB,EAAS,IANW,2CAAH,sDAsBZC,EAAa,uCAAG,sBAAA2D,EAAA,yDACA,KAAjB7D,EAAMsE,OADW,uBAEpBZ,EAAQ,IAFY,kBAGbzD,EAAS,KAHI,OAVpB,mKAAmKsE,KAClKvE,GAGD2D,EAAa,aACL,8DAA8DY,KAAKvE,GAC3E2D,EAAa,UACT1D,EAAS,IAGO,2CAAH,qDAQnB,OACC,sBAAKE,UAAU,YAAf,UACC,wBAAQA,UAAU,SAAlB,SACC,oBAAIA,UAAU,eAAd,kCAED,cAAC,EAAD,CAAQH,MAAOA,EAAOC,SAAUA,EAAUC,cAAeA,IACzD,0BAASC,UAAU,QAAnB,UACC,cAAC,EAAD,CAAMc,KAAK,aAAaC,KAAI,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMkD,KACpC,cAAC,EAAD,CAAMvD,KAAK,WAAWC,KAAI,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAMI,gBAAR,aAAE,EAAgB+C,OAAQtD,MAAK,OAAEG,QAAF,IAAEA,GAAF,UAAEA,EAAMI,gBAAR,aAAE,EAAgBgD,OAC3E,cAAC,EAAD,CAAMzD,KAAK,WAAWC,KAAI,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAMI,gBAAR,aAAE,EAAgBiD,SAAUvD,MAAI,IAC1D,cAAC,EAAD,CAAMH,KAAK,MAAMC,KAAI,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMsD,SAE7BtD,EAAO,cAAC,EAAD,CAAKA,KAAMA,IAAW,kCCjDjCuD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.613a8b5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import React from 'react';\r\nimport arrow from '../images/icon-arrow.svg';\r\n\r\nconst Inputs = ({ value, setValue, submitHandler }) => {\r\n\tconst changeHandler = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t};\r\n\r\n\tconst keyHandler = (e) => {\r\n\t\tif (e.keyCode === 13) submitHandler();\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"inputs\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"inputs--input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tonKeyDown={keyHandler}\r\n\t\t\t\tplaceholder=\"Enter domain or ip address\"\r\n\t\t\t\tautoFocus\r\n\t\t\t/>\r\n\t\t\t<button className=\"inputs--btn btn\" onClick={submitHandler}>\r\n\t\t\t\t<img src={arrow} alt=\"arrow\" />\r\n\t\t\t</button>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Inputs;\r\n","import React from 'react';\r\n\r\nconst Info = ({ head, text, text2, zone }) => {\r\n\ttext = text ? text : '';\r\n\treturn (\r\n\t\t<div className=\"info\">\r\n\t\t\t<span className=\"info--head\">{head}</span>\r\n\t\t\t<p className=\"info--text\">\r\n\t\t\t\t{zone && text ? 'UTC' + text : text ? text : '-'}\r\n\t\t\t\t{text2 ? ', ' + text2 : ''}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React, { useEffect } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport markerIcon from '../images/icon-location.svg';\r\n\r\nconst Map = ({ data }) => {\r\n\tconst style = {\r\n\t\theight: '480px',\r\n\t};\r\n\r\n\tlet [lat, lng] = [8.741222, 77.694626];\r\n\r\n\tif (data && data !== 'Error') {\r\n\t\tlat = Number(data?.location?.lat);\r\n\t\tlng = Number(data?.location?.lng);\r\n\t}\r\n\r\n\t!lat && ([lat, lng] = [8.741222, 77.694626]);\r\n\r\n\tconst leafletMarker = L.icon({\r\n\t\ticonUrl: markerIcon,\r\n\t\tshadowUrl: markerIcon,\r\n\r\n\t\ticonSize: [20, 25], // size of the icon\r\n\t\tshadowSize: [20, 25], // size of the shadow\r\n\t\ticonAnchor: [23.5, 55], // point of the icon which will correspond to marker's location\r\n\t\tshadowAnchor: [23.5, 55], // the same for the shadow\r\n\t\tpopupAnchor: [0, 0], // point from which the popup should open relative to the iconAnchor\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlet leafletMap = L.map('mapid', { zoomControl: false }).setView([lat, lng], 13);\r\n\t\tconst accessToken = process.env.REACT_APP_TOKEN;\r\n\r\n\t\tL.tileLayer(\r\n\t\t\t`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=${accessToken}`,\r\n\t\t\t{\r\n\t\t\t\tattribution:\r\n\t\t\t\t\t'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tid: 'mapbox/streets-v11',\r\n\t\t\t\ttileSize: 512,\r\n\t\t\t\tzoomOffset: -1,\r\n\t\t\t\taccessToken: accessToken,\r\n\t\t\t}\r\n\t\t).addTo(leafletMap);\r\n\r\n\t\tL.marker([lat, lng], { icon: leafletMarker }).addTo(leafletMap);\r\n\t\treturn () => {\r\n\t\t\tleafletMap.remove();\r\n\t\t};\r\n\t}, [lat, lng]);\r\n\r\n\treturn (\r\n\t\t<div id=\"mapid\" style={style} className=\"mapclass\">\r\n\t\t\tmap placeholder\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Inputs from './components/Inputs';\r\nimport Info from './components/Info';\r\nimport Map from './components/Map';\r\nimport './css/style.css';\r\n\r\nconst App = () => {\r\n\tconst [value, setValue] = useState('');\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst dataFetching = async (query) => {\r\n\t\tconst data = await axios\r\n\t\t\t.get(`https://geo.ipify.org/api/v1?apiKey=${process.env.REACT_APP_API_KEY}&${query}=${value}`)\r\n\t\t\t.then((res) => res.data)\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tsetData(data);\r\n\t\tsetValue('');\r\n\t};\r\n\r\n\t// checking whether the input value is ip address or domain name\r\n\tconst validate = () => {\r\n\t\tif (\r\n\t\t\t/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n\t\t\t\tvalue\r\n\t\t\t)\r\n\t\t)\r\n\t\t\tdataFetching('ipAddress');\r\n\t\telse if (/[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/.test(value))\r\n\t\t\tdataFetching('domain');\r\n\t\telse setValue('');\r\n\t};\r\n\r\n\tconst submitHandler = async () => {\r\n\t\tif (value.trim() === '') {\r\n\t\t\tsetData({});\r\n\t\t\treturn setValue('');\r\n\t\t}\r\n\t\tvalidate();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\t<h1 className=\"header--text\">IP Address Tracker</h1>\r\n\t\t\t</header>\r\n\t\t\t<Inputs value={value} setValue={setValue} submitHandler={submitHandler} />\r\n\t\t\t<section className=\"infos\">\r\n\t\t\t\t<Info head=\"Ip Address\" text={data?.ip} />\r\n\t\t\t\t<Info head=\"Location\" text={data?.location?.region} text2={data?.location?.city} />\r\n\t\t\t\t<Info head=\"Timezone\" text={data?.location?.timezone} zone />\r\n\t\t\t\t<Info head=\"Isp\" text={data?.isp} />\r\n\t\t\t</section>\r\n\t\t\t{data ? <Map data={data} /> : <></>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\n"],"sourceRoot":""}